** start of main.py **

class Category:
    def __init__(self, name):
        self.name = name
        self.ledger = []

    def deposit(self, amount, description=""):
        self.ledger.append({"amount": amount, "description": description})

    def withdraw(self, amount, description=""):
        if self.check_funds(amount):
            self.ledger.append({"amount": -amount, "description": description})
            return True
        else:
            return False

    def get_balance(self):
        total = 0
        for item in self.ledger:
            total += item["amount"]
        return total

    def transfer(self, amount, category):
        if self.check_funds(amount):
            self.withdraw(amount, "Transfer to " + category.name)
            category.deposit(amount, "Transfer from " + self.name)
            return True
        else:
            return False

    def check_funds(self, amount):
        if amount > self.get_balance():
            return False
        else:
            return True

    def __str__(self):
        title = self.name.center(30, "*") + "\n"
        items = ""
        for entry in self.ledger:
            description = entry["description"][:23]
            amount = "{:.2f}".format(entry["amount"])
            items += description.ljust(23) + amount.rjust(7) + "\n"
        total = "Total: {:.2f}".format(self.get_balance())
        return title + items + total


def create_spend_chart(categories):
    total_spent = 0
    spent = []

    # Calculate total spent and spent per category (withdrawals only)
    for category in categories:
        cat_spent = 0
        for item in category.ledger:
            if item["amount"] < 0:
                cat_spent += -item["amount"]
        spent.append(cat_spent)
        total_spent += cat_spent

    # Calculate percentage spent per category rounded down to nearest 10
    percentages = [int((amount / total_spent) * 100) // 10 * 10 for amount in spent]

    chart = "Percentage spent by category\n"
    for i in range(100, -1, -10):
        line = str(i).rjust(3) + "| "
        for percent in percentages:
            if percent >= i:
                line += "o  "
            else:
                line += "   "
        chart += line + "\n"

    chart += "    " + "-" * (len(categories) * 3 + 1) + "\n"

    max_len = max(len(cat.name) for cat in categories)

    # Add category names vertically
    for i in range(max_len):
        line = "     "
        for cat in categories:
            if i < len(cat.name):
                line += cat.name[i] + "  "
            else:
                line += "   "
        if i < max_len - 1:
            line += "\n"
        chart += line

    return chart


** end of main.py **

